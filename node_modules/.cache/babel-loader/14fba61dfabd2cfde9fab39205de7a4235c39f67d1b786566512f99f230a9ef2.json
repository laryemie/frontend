{"ast":null,"code":"var _jsxFileName = \"/Users/macm1/Documents/JobSkill-App/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (token && storedUser) {\n      setUser(JSON.parse(storedUser));\n      axios.defaults.headers.common['x-auth-token'] = token;\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/auth/login`, {\n      email,\n      password\n    });\n    const {\n      token,\n      user\n    } = response.data;\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    axios.defaults.headers.common['x-auth-token'] = token;\n    setUser(user);\n    return user;\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['x-auth-token'];\n  };\n  const resetPassword = async email => {\n    await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/auth/reset-password`, {\n      email\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      resetPassword,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","storedUser","JSON","parse","defaults","headers","common","login","email","password","response","post","process","env","REACT_APP_BACKEND_URL","data","setItem","stringify","logout","removeItem","resetPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macm1/Documents/JobSkill-App/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (token && storedUser) {\n      setUser(JSON.parse(storedUser));\n      axios.defaults.headers.common['x-auth-token'] = token;\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    const response = await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/auth/login`, { email, password });\n    const { token, user } = response.data;\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    axios.defaults.headers.common['x-auth-token'] = token;\n    setUser(user);\n    return user;\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['x-auth-token'];\n  };\n\n  const resetPassword = async (email) => {\n    await axios.post(`${process.env.REACT_APP_BACKEND_URL}/api/auth/reset-password`, { email });\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, resetPassword, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAIF,KAAK,IAAIG,UAAU,EAAE;MACvBN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;MAC/Bd,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGR,KAAK;IACvD;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,iBAAiB,EAAE;MAAEN,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC7G,MAAM;MAAEX,KAAK;MAAEJ;IAAK,CAAC,GAAGgB,QAAQ,CAACK,IAAI;IACrChB,YAAY,CAACiB,OAAO,CAAC,OAAO,EAAElB,KAAK,CAAC;IACpCC,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEd,IAAI,CAACe,SAAS,CAACvB,IAAI,CAAC,CAAC;IAClDP,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGR,KAAK;IACrDH,OAAO,CAACD,IAAI,CAAC;IACb,OAAOA,IAAI;EACb,CAAC;EAED,MAAMwB,MAAM,GAAGA,CAAA,KAAM;IACnBvB,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;IAChCpB,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;IAC/B,OAAOhC,KAAK,CAACiB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;EACtD,CAAC;EAED,MAAMc,aAAa,GAAG,MAAOZ,KAAK,IAAK;IACrC,MAAMrB,KAAK,CAACwB,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,0BAA0B,EAAE;MAAEN;IAAM,CAAC,CAAC;EAC7F,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAE5B,IAAI;MAAEa,KAAK;MAAEW,MAAM;MAAEE,aAAa;MAAExB;IAAQ,CAAE;IAAAJ,QAAA,EAC1EA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,EAAA,CAxCWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}