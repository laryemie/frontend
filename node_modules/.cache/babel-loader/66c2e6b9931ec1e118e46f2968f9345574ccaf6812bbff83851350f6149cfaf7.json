{"ast":null,"code":"var _jsxFileName = \"/Users/macm1/Documents/JobSkill-App/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\nimport React, { useContext } from 'react';\nimport { TextField, Button, Container, Typography, Alert, Card, CardContent } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().required('Required')\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '2rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          align: \"center\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            password: '',\n            error: ''\n          },\n          validationSchema: validationSchema,\n          onSubmit: async (values, {\n            setFieldError\n          }) => {\n            try {\n              const user = await login(values.email, values.password);\n              if (user.role === 'worker') {\n                navigate('/worker-dashboard');\n              } else if (user.role === 'client') {\n                navigate('/client-dashboard');\n              } else if (user.role === 'admin') {\n                navigate('/admin-dashboard');\n              }\n            } catch (err) {\n              setFieldError('error', err.message);\n              if (err.message.includes('Account locked')) {\n                navigate('/reset-password');\n              }\n            }\n          },\n          children: ({\n            errors,\n            touched,\n            values\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [errors.error && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              children: errors.error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              label: \"Email\",\n              name: \"email\",\n              fullWidth: true,\n              margin: \"normal\",\n              variant: \"outlined\",\n              error: touched.email && !!errors.email,\n              helperText: touched.email && errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: TextField,\n              label: \"Password\",\n              name: \"password\",\n              type: \"password\",\n              fullWidth: true,\n              margin: \"normal\",\n              variant: \"outlined\",\n              error: touched.password && !!errors.password,\n              helperText: touched.password && errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              fullWidth: true,\n              sx: {\n                mt: 2\n              },\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"DroCcwIAxVtGEBmpmJt/aQB1vCM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","TextField","Button","Container","Typography","Alert","Card","CardContent","useNavigate","AuthContext","Formik","Form","Field","Yup","jsxDEV","_jsxDEV","Login","_s","login","navigate","validationSchema","object","email","string","required","password","maxWidth","style","marginTop","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","error","onSubmit","values","setFieldError","user","role","err","message","includes","errors","touched","severity","as","label","name","fullWidth","margin","helperText","type","color","sx","mt","_c","$RefreshReg$"],"sources":["/Users/macm1/Documents/JobSkill-App/frontend/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\nimport React, { useContext } from 'react';\nimport { TextField, Button, Container, Typography, Alert, Card, CardContent } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nconst Login = () => {\n  const { login } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email').required('Required'),\n    password: Yup.string().required('Required'),\n  });\n\n  return (\n    <Container maxWidth=\"sm\" style={{ marginTop: '2rem' }}>\n      <Card>\n        <CardContent>\n          <Typography variant=\"h4\" gutterBottom align=\"center\">\n            Login\n          </Typography>\n          <Formik\n            initialValues={{ email: '', password: '', error: '' }}\n            validationSchema={validationSchema}\n            onSubmit={async (values, { setFieldError }) => {\n              try {\n                const user = await login(values.email, values.password);\n                if (user.role === 'worker') {\n                  navigate('/worker-dashboard');\n                } else if (user.role === 'client') {\n                  navigate('/client-dashboard');\n                } else if (user.role === 'admin') {\n                  navigate('/admin-dashboard');\n                }\n              } catch (err) {\n                setFieldError('error', err.message);\n                if (err.message.includes('Account locked')) {\n                  navigate('/reset-password');\n                }\n              }\n            }}\n          >\n            {({ errors, touched, values }) => (\n              <Form>\n                {errors.error && <Alert severity=\"error\">{errors.error}</Alert>}\n                <Field\n                  as={TextField}\n                  label=\"Email\"\n                  name=\"email\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  error={touched.email && !!errors.email}\n                  helperText={touched.email && errors.email}\n                />\n                <Field\n                  as={TextField}\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  error={touched.password && !!errors.password}\n                  helperText={touched.password && errors.password}\n                />\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth sx={{ mt: 2 }}>\n                  Login\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}