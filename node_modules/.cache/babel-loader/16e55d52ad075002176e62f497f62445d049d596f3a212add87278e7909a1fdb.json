{"ast":null,"code":"// src/App.js\nimport React from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import{AuthProvider,AuthContext}from'./context/AuthContext';import{Elements}from'@stripe/react-stripe-js';import{loadStripe}from'@stripe/stripe-js';import{ThemeProvider}from'@mui/material/styles';import theme from'./theme';import Navbar from'./components/Navbar';import Home from'./pages/Home';import WorkerDashboard from'./pages/WorkerDashboard';import ClientDashboard from'./pages/ClientDashboard';import AdminDashboard from'./pages/AdminDashboard';import Login from'./components/Login';import RegisterWorker from'./components/RegisterWorker';import RequestService from'./components/RequestService';import ResetPassword from'./components/ResetPassword';import Chat from'./components/Chat';import Payment from'./components/Payment';import NotFound from'./pages/NotFound';// Load Stripe with the publishable key from environment variables\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const stripePromise=loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);const App=()=>{return/*#__PURE__*/_jsx(ThemeProvider,{theme:theme,children:/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Elements,{stripe:stripePromise,children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Home,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{})}),/*#__PURE__*/_jsx(Route,{path:\"/register-worker\",element:/*#__PURE__*/_jsx(RegisterWorker,{})}),/*#__PURE__*/_jsx(Route,{path:\"/reset-password\",element:/*#__PURE__*/_jsx(ResetPassword,{})}),/*#__PURE__*/_jsx(Route,{path:\"/request-service\",element:/*#__PURE__*/_jsx(ProtectedRoute,{role:\"client\",children:/*#__PURE__*/_jsx(RequestService,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/worker-dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{role:\"worker\",children:/*#__PURE__*/_jsx(WorkerDashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/client-dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{role:\"client\",children:/*#__PURE__*/_jsx(ClientDashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/admin-dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{role:\"admin\",children:/*#__PURE__*/_jsx(AdminDashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/chat/:chatId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Chat,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/payment/:requestId\",element:/*#__PURE__*/_jsx(ProtectedRoute,{role:\"client\",children:/*#__PURE__*/_jsx(PaymentWrapper,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(NotFound,{})})]})})]})})});};// ProtectedRoute component to handle role-based access\nconst ProtectedRoute=_ref=>{let{role,children}=_ref;const{user,loading}=React.useContext(AuthContext);if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});if(!user)return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});if(role&&user.role!==role)return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});return children;};// PaymentWrapper to pass requestId and amount to Payment component\nconst PaymentWrapper=()=>{const{requestId}=React.useParams();const amount=50;// Example amount, you can make this dynamic by fetching from the backend\nreturn/*#__PURE__*/_jsx(Payment,{requestId:requestId,amount:amount});};export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","AuthProvider","AuthContext","Elements","loadStripe","ThemeProvider","theme","Navbar","Home","WorkerDashboard","ClientDashboard","AdminDashboard","Login","RegisterWorker","RequestService","ResetPassword","Chat","Payment","NotFound","jsx","_jsx","jsxs","_jsxs","stripePromise","process","env","REACT_APP_STRIPE_PUBLISHABLE_KEY","App","children","stripe","path","element","ProtectedRoute","role","PaymentWrapper","_ref","user","loading","useContext","to","requestId","useParams","amount"],"sources":["/Users/macm1/Documents/JobSkill-App/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, AuthContext } from './context/AuthContext';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { ThemeProvider } from '@mui/material/styles';\nimport theme from './theme';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport WorkerDashboard from './pages/WorkerDashboard';\nimport ClientDashboard from './pages/ClientDashboard';\nimport AdminDashboard from './pages/AdminDashboard';\nimport Login from './components/Login';\nimport RegisterWorker from './components/RegisterWorker';\nimport RequestService from './components/RequestService';\nimport ResetPassword from './components/ResetPassword';\nimport Chat from './components/Chat';\nimport Payment from './components/Payment';\nimport NotFound from './pages/NotFound';\n\n// Load Stripe with the publishable key from environment variables\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY);\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AuthProvider>\n        <Router>\n          <Navbar />\n          <Elements stripe={stripePromise}>\n            <Routes>\n              {/* Public Routes */}\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/register-worker\" element={<RegisterWorker />} />\n              <Route path=\"/reset-password\" element={<ResetPassword />} />\n\n              {/* Protected Routes */}\n              <Route\n                path=\"/request-service\"\n                element={\n                  <ProtectedRoute role=\"client\">\n                    <RequestService />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/worker-dashboard\"\n                element={\n                  <ProtectedRoute role=\"worker\">\n                    <WorkerDashboard />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/client-dashboard\"\n                element={\n                  <ProtectedRoute role=\"client\">\n                    <ClientDashboard />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/admin-dashboard\"\n                element={\n                  <ProtectedRoute role=\"admin\">\n                    <AdminDashboard />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/chat/:chatId\"\n                element={\n                  <ProtectedRoute>\n                    <Chat />\n                  </ProtectedRoute>\n                }\n              />\n              <Route\n                path=\"/payment/:requestId\"\n                element={\n                  <ProtectedRoute role=\"client\">\n                    <PaymentWrapper />\n                  </ProtectedRoute>\n                }\n              />\n\n              {/* Fallback Route */}\n              <Route path=\"*\" element={<NotFound />} />\n            </Routes>\n          </Elements>\n        </Router>\n      </AuthProvider>\n    </ThemeProvider>\n  );\n};\n\n// ProtectedRoute component to handle role-based access\nconst ProtectedRoute = ({ role, children }) => {\n  const { user, loading } = React.useContext(AuthContext);\n\n  if (loading) return <div>Loading...</div>;\n  if (!user) return <Navigate to=\"/login\" />;\n  if (role && user.role !== role) return <Navigate to=\"/\" />;\n  return children;\n};\n\n// PaymentWrapper to pass requestId and amount to Payment component\nconst PaymentWrapper = () => {\n  const { requestId } = React.useParams();\n  const amount = 50; // Example amount, you can make this dynamic by fetching from the backend\n  return <Payment requestId={requestId} amount={amount} />;\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}